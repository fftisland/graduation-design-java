<?xml version="1.0" encoding="UTF-8"?>
<!--默认命名空间为第一个，可以不写别名，也就是默认使用,比如我们常用的bean元素-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-4.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
  <!--Spring的基本配置，主要是bean，日志这些-->

  <!--包扫描-->
  <context:component-scan base-package="ZzzAhu163.base"></context:component-scan>
  <context:component-scan base-package="ZzzAhu163.utils"></context:component-scan>

  <!-- 载入配置的属性 -->
  <bean id="dbPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="order" value="1"></property>
    <property name="location">
      <value>classpath:base.properties</value>
    </property>
  </bean>

  <!--批量代理-->
  <bean id="batchProxyFactory" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    <property name="beanNames" value="*eImpl"/> <!--匹配需要被代理的Bean的名字-->
    <property name="interceptorNames" value="regexAdvisor"/> <!--切面Bean的名字，不知道为什么要用value而不用ref-->
    <property name="optimize" value="true"/>  <!--自动选择代理方式-->
  </bean>

  <!--正则表达式切面-->
  <bean class="org.springframework.aop.support.RegexpMethodPointcutAdvisor" id="regexAdvisor">
      <property name="pattern" value=".*hello"/>
      <property name="advice" ref="CommonAdvice"/>
  </bean>

  <aop:aspectj-autoproxy proxy-target-class="true"/> <!--开启Cglib代理-->
</beans>
