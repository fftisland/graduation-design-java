<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ZzzAhu163.mapper.ContactGroup.ContactGroupMapper">
    <sql id="queryColumns">
        ${alias}.id, ${alias}.name, ${alias}.description,
        ${alias}.entity_type, ${alias}.create_time, ${alias}.update_time
    </sql>

    <resultMap id="ContactGroupResult" type="ContactGroup">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="contactType" column="entity_type" typeHandler="ZzzAhu163.base.ContactGroup.ContactTypeHandler"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="baseContactObject.toList" column="{contact_group_id=id, user_list_type=to_user_list}"
                    select="queryUserList"/>
        <collection property="baseContactObject.ccList" column="{contact_group_id=id, user_list_type=cc_user_list}"
                    select="queryUserList"/>
        <collection property="baseContactObject.bccList" column="{contact_group_id=id, user_list_type=bcc_user_list}"
                    select="queryUserList"/>
    </resultMap>

    <resultMap id="UserResult" type="User">
        <id property="id" column="id"/>
        <result property="name" column="user_name"/>
        <result property="email" column="email"/>
    </resultMap>

    <sql id="queryCondition">
        <where>
            <if test="contactType != null">
                AND ${alias}.entity_type = #{contactType.code}
            </if>
            <if test="id > 0">
                AND ${alias}.id = #{id}
            </if>
            <if test="name != null and name != ''">
                AND ${alias}.name = #{name}
            </if>
        </where>
    </sql>

    <insert id="insertContactGroup" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO contact_group_list
        (
        name, description, entity_type, create_time, update_time
        )
        VALUES
        (
        #{name}, #{description}, #{contactType.code}, now(), now()
        )
    </insert>

    <insert id="insertUserToList">
        INSERT IGNORE INTO contact_user_map
        (
          contact_group_id, user_id, user_list_type
        )
        VALUES
        <foreach collection="baseContactObject.toList" index="index" separator="," item="item">
            (
            #{id}, #{item.id}, 1
            )
        </foreach>
    </insert>
    <insert id="insertUserCcList">
        INSERT IGNORE INTO contact_user_map
        (
        contact_group_id, user_id, user_list_type
        )
        VALUES
        <foreach collection="baseContactObject.ccList" index="index" separator="," item="item">
            (
            #{id}, #{item.id}, 2
            )
        </foreach>
    </insert>
    <insert id="insertUserBccList">
        INSERT IGNORE INTO contact_user_map
        (
        contact_group_id, user_id, user_list_type
        )
        VALUES
        <foreach collection="baseContactObject.bccList" index="index" separator="," item="item">
            (
            #{id}, #{item.id}, 3
            )
        </foreach>
    </insert>

    <delete id="deleteNotInGroupMapToUser">
        DELETE FROM contact_user_map
        <where>
            contact_group_id = #{id} AND user_list_type = 1
            <if test="baseContactObject != null">
                <if test="baseContactObject.toList != null and baseContactObject.toList.size() > 0">
                    AND user_id NOT IN
                    <foreach collection="baseContactObject.toList" item="item" index="index"
                             separator="," open="(" close=")">
                        #{item.id}
                    </foreach>
                </if>
            </if>
        </where>
    </delete>
    <delete id="deleteNotInGroupMapCcUser">
        DELETE FROM contact_user_map
        <where>
            contact_group_id = #{id} AND user_list_type = 2
            <if test="baseContactObject != null">
                <if test="baseContactObject.ccList != null and baseContactObject.ccList.size() > 0">
                    AND user_id NOT IN
                    <foreach collection="baseContactObject.ccList" item="item" index="index"
                             separator="," open="(" close=")">
                        #{item.id}
                    </foreach>
                </if>
            </if>
        </where>
    </delete>
    <delete id="deleteNotInGroupMapBccUser">
        DELETE FROM contact_user_map
        <where>
            contact_group_id = #{id} AND user_list_type = 3
            <if test="baseContactObject != null">
                <if test="baseContactObject.bccList != null and baseContactObject.bccList.size() > 0">
                    AND user_id NOT IN
                    <foreach collection="baseContactObject.bccList" item="item" index="index"
                             separator="," open="(" close=")">
                        #{item.id}
                    </foreach>
                </if>
            </if>
        </where>
    </delete>

    <delete id="deleteContactGroupById">
        DELETE FROM contact_group_list WHERE id = #{id}
    </delete>

    <delete id="deleteAllContactGroupUser">
        DELETE FROM contact_user_map WHERE contact_group_id = #{id};
    </delete>

    <select id="queryContactGroupListCount" resultType="int">
        SELECT COUNT(1) FROM contact_group_list t
        <include refid="queryCondition">
            <property name="alias" value="t"/>
        </include>
    </select>

    <select id="queryContactGroupList" resultMap="ContactGroupResult">
        SELECT
        <include refid="queryColumns">
            <property name="alias" value="t"/>
        </include>
        ,1 as to_user_list, 2 as cc_user_list, 3 as bcc_user_list
        FROM contact_group_list t
        <include refid="queryCondition">
            <property name="alias" value="t"/>
        </include>
    </select>

    <select id="queryUserList" resultMap="UserResult">
        SELECT u.id, u.user_name, u.email FROM user_list u, contact_user_map t
        WHERE
        t.contact_group_id = #{contact_group_id} AND t.user_list_type = #{user_list_type}
        AND
        u.id = t.user_id
    </select>

    <update id="updateContactGroup">
        UPDATE contact_group_list
        SET
        name = #{name},
        description = #{description},
        update_time = now()
        WHERE id = #{id}
    </update>
</mapper>
