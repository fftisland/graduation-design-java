<?xml version="1.0" encoding="UTF-8"?>
<!--默认命名空间为第一个，可以不写别名，也就是默认使用,比如我们常用的bean元素-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-4.0.xsd">
  <!--Spring的基本配置，主要是bean，日志这些-->
  <import resource="classpath:base-spring-config.xml"></import>

  <!--包扫描-->
  <context:component-scan base-package="ZzzAhu163.mapper"></context:component-scan>

  <!-- 载入配置的属性 -->
  <bean id="mapperPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="order" value="1"></property>
    <property name="location">
      <value>classpath:mapper.properties</value>
    </property>
  </bean>

  <!-- 配置数据源 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="driverClassName" value="${db.driver}" />
    <property name="url" value="${db.url}" />
    <property name="username" value="${db.username}" />
    <property name="password" value="${db.password}" />
    <!-- The connection properties that will be sent to our JDBC driver when establishing new connections -->
    <property name="connectionProperties" value="${db.connectionProperties}"/>

    <property name="initialSize" value="10" />        <!-- 初始连接数量 -->
    <property name="maxActive" value="50" />          <!-- 最大连接数量 -->
    <property name="maxWait" value="180000" />        <!-- 如果程序无法从连接池获得连接，那么超过这个时间之后，程序抛异常 -->

    <property name="validationQuery" value="SELECT 1" />   <!-- 数据库连接可用性测试语句 -->
    <property name="testOnBorrow" value="true" />          <!-- 每次获取一个连接的时候，验证一下连接是否可用，语句在validationQuery里面 -->
    <property name="removeAbandoned" value="true" />       <!-- 自动处理连接未关闭的问题，Setting this to true can recover db connections from poorly written applications which fail to close a connection.  -->
    <property name="removeAbandonedTimeout" value="300" /> <!-- 连接使用后5分钟未关闭，则抛弃 -->

    <!-- 每5分钟检查一次，每次检查10个连接，如果连接空闲时间达到5分钟，则认为可以Evict -->
    <property name="timeBetweenEvictionRunsMillis" value="300000" /> <!-- 该属性>0即开启一个evict线程 -->
    <property name="minEvictableIdleTimeMillis" value="320000" />

    <!-- druid连接池的监控功能 -->
    <property name="filters" value="log4j" />
    <property name="proxyFilters">
      <list>
        <ref bean="stat-filter" />
      </list>
    </property>

  </bean>

  <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
    <property name="mergeSql" value="true" />
    <property name="slowSqlMillis" value="30000" />
    <property name="logSlowSql" value="true" />
  </bean>

  <!-- 配置mybatis的sqlSessionFactory -->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <!-- 自动扫描mappers.xml文件 ，要加上classpath:com/... -->
    <property name="mapperLocations"
              value="classpath:ZzzAhu163/mapper/**/*.xml" /> <!--mapper.xml扫描范围-->
    <!-- mybatis配置文件 -->
    <property name="configLocation" value="classpath:mybatis-config.xml" /> <!--mybatis配置文件-->
  </bean>

  <!-- Mapper DAO接口所在包名，Spring会自动查找其下的类 -->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="ZzzAhu163.mapper" /> <!--mapper接口扫描范围-->
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    <!-- 需要注册成bean的接口Mapper，都需要继承接口SocBaseMapper -->
    <property name="markerInterface" value="ZzzAhu163.BaseMapper" /> <!--mapper接口扫描标志-->
  </bean>

</beans>
